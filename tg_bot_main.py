import random
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram import Bot, Dispatcher, executor, types
from aiogram.dispatcher.filters import Text
from config import TOKEN_API



bot = Bot(token=TOKEN_API)
dp = Dispatcher(bot)

keyboard = types.InlineKeyboardMarkup()
join_button = types.InlineKeyboardButton(text='–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è', callback_data='join_game')
keyboard.add(join_button)
roles = ['–¢—ã –º–∞—Ñ–∏—è - –í–µ—Ä–µ–≤–æ—á–∫–∏–Ω', '–¢—ã –º–∏—Ä–Ω—ã–π –∂–∏—Ç–µ–ª—å - –í–æ—Å–∫–∞–Ω—è–Ω', '–¢—ã –∫–æ–º–∏—Å—Å–∞—Ä - –†–∞–π–≥–æ—Ä–æ–¥—Å–∫–∏–π',
         '–¢—ã –¥–æ–∫—Ç–æ—Ä - –ú–æ–ª—á–∞–Ω–æ–≤', '–¢—ã –º–∏—Ä–Ω—ã–π –∂–∏—Ç–µ–ª—å - –ú–æ–Ω—á–µ–Ω–∫–æ', '–¢—ã –º–∞—Ñ–∏—è - –¢–∫–∞—á—ë–≤',
         '–¢—ã –º–∏—Ä–Ω—ã–π –∂–∏—Ç–µ–ª—å - –ê–Ω–¥—Ä–µ–µ–≤', '–¢—ã –º–∏—Ä–Ω—ã–π –∂–∏—Ç–µ–ª—å - –ü–∞–≤–ª–æ–≤–∞', '–¢—ã –¥–æ–Ω-–º–∞—Ñ–∏—è - –ò–≤–∞–Ω–æ–≤–∞',
         '–¢—ã –º–∏—Ä–Ω—ã–π –∂–∏—Ç–µ–ª—å - –ü–æ–¥–ª–µ—Å–Ω—ã—Ö']
flag = 0
killer_flag_first = 0
killer_flag_second = 0
killer_flag_third = 0
healer_flag = 0
chop_flag = 0
players = list()
killed_players = list()
healed_player = list()
killed_player = list()
votes = list()
first_mafia = None
second_mafia = None
third_mafia = None
healer = None
chop = None
checked = list()

counter_of_alive = 0
counter_of_mafia = 0

game_text = '''–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ —Ñ–∏–∑—Ç–µ—Ö-–ú–∞—Ñ–∏—é!ü•∞ü•∞ü•∞
–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤ –Ω–∞—à–µ–º –º–∏—Ä–Ω–æ–º –≤—É–∑–µ –∑–∞–≤–µ–ª–∏—Å—å –Ω–µ–≥–æ–¥—è–∏, –∫–æ—Ç–æ—Ä—ã–µ –¥–µ–ª–∞—é—Ç
–≤–∏–¥, —á—Ç–æ –æ–Ω–∏ —á–µ—Å—Ç–Ω—ã–µ –∏ —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤—ã–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏, –Ω–æ –ø–æ –Ω–æ—á–∞–º –æ–Ω–∏ —Ñ–∞—á–∞—Ç
–∑–∞ –¥–∞–∂–µ —Å–∞–º—ã–µ –º–µ–ª–∫–∏–µ –Ω–µ–¥–æ—á—ë—Ç—ã –≤ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã—Ö –∏ –¥–æ–º–∞—à–∫–∞—Ö –±–µ–¥–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤.
–í–∞–º –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏ —ç—Ç–∏—Ö –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –∏ –ª–∏—à–∏—Ç—å –∏—Ö –ø—Ä–µ–º–∏–∏!üòàüòàüòà
–ñ–µ–ª–∞—é —É–¥–∞—á–∏ —á–µ—Å—Ç–Ω—ã–º –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è–º!
–ß–µ—Ä–µ–∑ 2 –º–∏–Ω—É—Ç—ã –ø–æ—Å–ª–µ –Ω–∞—á–∞–ª–∞ –Ω–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é next day, —á—Ç–æ–±—ã –¥–æ–±—Ä–∞—Ç—å—Å—è –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ç—Ä–∞'''

start_text = '''–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã –Ω–∞–±—Ä–∞–ª–æ—Å—å
–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –Ω–∞–ø–∏—à–∏—Ç–µ Go'''

night_text = '''–ù–æ–≤–∞—è –Ω–æ—á—å –Ω–∞—á–∞–ª–∞—Å—å, –∫—Ç–æ –∂–µ –º–∞—Ñ–∏—è?'''

@dp.message_handler(Text(equals='Play'))
async def start_the_connection(message: types.Message):
    global flag
    if flag == 0:
        await bot.send_message(chat_id=message.chat.id,
                               text='–•–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –≤ —Ñ–∏–∑—Ç–µ—Ö-–ú–∞—Ñ–∏—é?üéÉüéÉüéÉ',
                               reply_markup=keyboard)
        flag = 1
    else:
        await bot.send_message(chat_id=message.chat.id,
                               text='–ò–≥—Ä–∞ —É–∂–µ –∏–¥—ë—Ç')

@dp.message_handler(Text(equals='Go'))
async def start_the_game(message: types.Message):
    global counter_of_mafia, counter_of_alive
    global first_mafia, second_mafia, third_mafia
    global chop, healer
    global flag
    if len(players) >= 5 and flag == 1:
        flag += 1
        await bot.send_message(chat_id=message.chat.id,
                               text=game_text)
        game_role = list()
        buttons = list()
        counter_of_alive = len(players)
        for i in range(len(players)):
            game_role.append(roles[i])
        random_role = random.sample(game_role, len(players))
        for j in range(len(players)):
            player = players[j]
            if random_role[j] == roles[0]:
                counter_of_mafia += 1
                first_mafia = player
                await bot.send_message(chat_id=player.id,
                                       text=f'{random_role[j]}')
                await bot.send_message(chat_id=player.id,
                                       text='''–í—ã–±–µ—Ä–∏ –∂–µ—Ä—Ç–≤—É
–î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É Kill''')
            elif random_role[j] == roles[5]:
                counter_of_mafia += 1
                second_mafia = player
                await bot.send_message(chat_id=player.id,
                                       text=f'{random_role[j]}')
                await bot.send_message(chat_id=player.id,
                                       text='''–í—ã–±–µ—Ä–∏ –∂–µ—Ä—Ç–≤—É
–î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É Kill''')
            elif random_role[j] == roles[8]:
                counter_of_mafia += 1
                third_mafia = player
                await bot.send_message(chat_id=player.id,
                                       text=f'{random_role[j]}')
                await bot.send_message(chat_id=player.id,
                                       text='''–í—ã–±–µ—Ä–∏ –∂–µ—Ä—Ç–≤—É
–î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É Kill''')
            elif random_role[j] == roles[2]:
                await bot.send_message(chat_id=player.id,
                                       text=f'{random_role[j]}\n–í—ã–±–µ—Ä–∏ –∫–æ–≥–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å\n–î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É check')
                chop = player
            elif random_role[j] == roles[3]:
                await bot.send_message(chat_id=player.id,
                                       text=f'{random_role[j]}\n–í—ã–±–µ—Ä–∏ –∫–æ–≥–æ –≤—ã–ª–µ—á–∏—Ç—å\n–î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É heal')
                healer = player
            else:
                await bot.send_message(chat_id=player.id,
                                       text=f'{random_role[j]}\n–ñ–¥–∏ —É—Ç—Ä–∞')
    elif len(players) < 5:
        await bot.send_message(chat_id=message.chat.id,
                               text='–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã')
    else:
        await bot.send_message(chat_id=message.chat.id,
                               text='–ò–≥—Ä–∞ —É–∂–µ –∏–¥—ë—Ç')


@dp.message_handler(Text(equals='Kill'))
async def kill_command(message: types.Message):
    global flag, killer_flag_first, killer_flag_second, killer_flag_third
    global first_mafia, second_mafia, third_mafia
    if flag == 2 and message.from_user == first_mafia and killer_flag_first == 0:
        Kill_kb = InlineKeyboardMarkup()
        kill_buttons = list()
        for i in range(len(players)):
            kill_buttons.append(InlineKeyboardButton(text=f'{players[i].full_name}',
                                                     callback_data=f'Kill {players[i].full_name}'))
        Kill_kb.add(*kill_buttons)
        await message.answer(text='–í—ã–±–µ—Ä–∏ –∂–µ—Ä—Ç–≤—É',
                             reply_markup=Kill_kb)
        killer_flag_first += 1
    elif flag == 2 and message.from_user == second_mafia and killer_flag_second == 0:
        Kill_kb = InlineKeyboardMarkup()
        kill_buttons = list()
        for i in range(len(players)):
            kill_buttons.append(InlineKeyboardButton(text=f'{players[i].full_name}',
                                                     callback_data=f'Kill {players[i].full_name}'))
        Kill_kb.add(*kill_buttons)
        await message.answer(text='–í—ã–±–µ—Ä–∏ –∂–µ—Ä—Ç–≤—É',
                             reply_markup=Kill_kb)
        killer_flag_second += 1
    elif flag == 2 and message.from_user == third_mafia and killer_flag_third == 0:
        Kill_kb = InlineKeyboardMarkup()
        kill_buttons = list()
        for i in range(len(players)):
            kill_buttons.append(InlineKeyboardButton(text=f'{players[i].full_name}',
                                                     callback_data=f'Kill {players[i].full_name}'))
        Kill_kb.add(*kill_buttons)
        await message.answer(text='–í—ã–±–µ—Ä–∏ –∂–µ—Ä—Ç–≤—É',
                             reply_markup=Kill_kb)
        killer_flag_third += 1
    else:
        await message.answer(text='–£–∂–µ –Ω–µ–ª—å–∑—è —É–±–∏–≤–∞—Ç—å')


@dp.message_handler(Text(equals='heal'))
async def heal_command(message: types.Message):
    global flag, healer_flag
    global healer
    if flag == 2 and healer_flag == 0 and message.from_user == healer:
        Heal_kb = InlineKeyboardMarkup()
        Heal_buttons = list()
        for i in range(len(players)):
            Heal_buttons.append(InlineKeyboardButton(text=f'{players[i].full_name}',
                                                     callback_data=f'Heal {players[i].full_name}'))
        Heal_kb.add(*Heal_buttons)
        await message.answer(text='–í—ã–±–µ—Ä–∏ –∫–æ–≥–æ —Ö–æ—á–µ—à—å –≤—ã–ª–µ—á–∏—Ç—å',
                             reply_markup=Heal_kb)
        healer_flag += 1
    else:
        await message.answer(text='–°–µ–π—á–∞—Å –Ω–µ–ª—å–∑—è –ª–µ—á–∏—Ç—å')


@dp.message_handler(Text(equals='check'))
async def check_command(message: types.Message):
    global checked
    global flag, chop_flag
    global chop
    if flag == 2 and message.from_user == chop and chop_flag == 0:
        check_kb = InlineKeyboardMarkup()
        chop_flag += 1
        check_buttons = list()
        for i in range(len(players)):
            check_buttons.append(InlineKeyboardButton(text=f'{players[i].full_name}',
                                                      callback_data=f'Check {players[i].full_name}'))
        check_kb.add(*check_buttons)
        await message.answer(text='–í—ã–±–µ—Ä–∏ –∫–æ–≥–æ —Ö–æ—á–µ—à—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å',
                             reply_markup=check_kb)
    else:
        await message.answer(text='–°–µ–π—á–∞—Å –Ω–µ–ª—å–∑—è –ø—Ä–æ–≤–µ—Ä—è—Ç—å')


@dp.callback_query_handler(lambda c: c.data == 'join_game')
async def join_game(callback_query: types.CallbackQuery):
    global flag
    if flag == 1:
        user = callback_query.from_user
        if user not in players:
            players.append(user)
            await bot.send_message(chat_id=user.id,
                                   text='–í—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –∏–≥—Ä–µ!')
            if user.full_name == 'Andrew':
                await bot.send_message(chat_id=callback_query.message.chat.id,
                                       text=f'{user.full_name} –∏–¥—ë—Ç –Ω–∞ –∑–∞–±–∏–≤üòé!')
            elif user.full_name == '–ê–π–¥–∞—Ä –ê–º–∞–Ω–∫—É–ª–æ–≤':
                await bot.send_message(chat_id=callback_query.message.chat.id,
                                       text=f'{user.full_name} –ö—ã—Ä–≥—ã–∑ –≤ –∑–¥–∞–Ω–∏–∏!')
            elif user.full_name == '–∫–∞—Ç—è':
                await bot.send_message(chat_id=callback_query.message.chat.id,
                                       text=f'{user.full_name} - –∞–Ω–∏–≥–∏–ª—è—Ç–æ—Ä –∫—Ä–∏–Ω–∂–∞ –∏–¥—ë—Ç –Ω–µ –∑–∞–±–∏–≤')
            else:
                await bot.send_message(chat_id=callback_query.message.chat.id,
                                       text=f'{user.full_name} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –∏–≥—Ä–µ!')
            await callback_query.message.edit_text(text=f'''–•–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –≤ —Ñ–∏–∑—Ç–µ—Ö-–ú–∞—Ñ–∏—é?üéÉüéÉüéÉ?
{len(players)} —É–∂–µ –≤ –∏–≥—Ä–µü•≥ü•≥ü•≥''',
                                                   reply_markup=keyboard)
            if len(players) >= 5:
                await bot.send_message(chat_id=callback_query.message.chat.id,
                                       text=start_text)
        else:
            await bot.send_message(chat_id=user.id,
                                   text='–í—ã —É–∂–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –∏–≥—Ä–µ!')
    else:
        await bot.send_message(chat_id=callback_query.message.chat.id,
                               text='–ò–≥—Ä–∞ —É–∂–µ –∏–¥—ë—Ç')



@dp.message_handler(Text(equals='next day'))
async def next_round(message: types.Message):
    global counter_of_alive, counter_of_mafia
    global first_mafia, second_mafia, third_mafia
    global flag
    global players, killed_player, killed_players, healed_player
    print(flag)
    print(first_mafia)
    print(counter_of_alive)
    print(counter_of_mafia)
    print(killed_player)
    print(killed_players)
    print(healed_player)
    if (len(healed_player) == 1 and len(killed_player) > 0 and killed_player[0] == healed_player[0]) and flag == 2:
        flag += 1
        await bot.send_message(chat_id=message.chat.id,
                               text='''–°–µ–≥–æ–¥–Ω—è –Ω–æ—á—å—é –Ω–∏–∫—Ç–æ –Ω–µ —É–º–µ—Ä, –º–æ–∂–µ—Ç–µ –æ–±—Å—É–¥–∏—Ç—å
–∫–æ–≥–æ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ —Ñ–∞–∫–µ—Ä–æ–º
–î–ª—è –Ω–∞—á–∞–ª–∞ –≥–æ–ª–æ—Å–≤–∞–Ω–∏—è –Ω–∞–ø–∏—à–∏—Ç–µ Vote''')
    elif len(killed_player) > 0 and flag == 2:
        for player in players:
            if player == killed_player[0] and player == first_mafia:
                players.remove(player)
                counter_of_alive -= 1
                counter_of_mafia -= 1
            elif player == killed_player[0] and player == second_mafia:
                players.remove(player)
                counter_of_alive -= 1
                counter_of_mafia -= 1
            elif player == killed_player[0] and player == third_mafia:
                players.remove(player)
                counter_of_alive -= 1
                counter_of_mafia -= 1
            elif player == killed_player[0]:
                players.remove(player)
                counter_of_alive -= 1
        if counter_of_mafia != 0 and counter_of_alive > 2 * counter_of_mafia:
            await bot.send_message(chat_id=message.chat.id,
                               text=f'''–°–µ–≥–æ–¥–Ω—è –Ω–æ—á—å—é —É–º–µ—Ä(–ª–∞) {killed_player[0].full_name}, –º–æ–∂–µ—Ç–µ –æ–±—Å—É–¥–∏—Ç—å
–∫–æ–≥–æ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ —Ñ–∞–∫–µ—Ä–æ–º
–î–ª—è –Ω–∞—á–∞–ª–∞ –≥–æ–ª–æ—Å–≤–∞–Ω–∏—è –Ω–∞–ø–∏—à–∏—Ç–µ Vote''')
            flag += 1
        elif counter_of_mafia == 0:
            await bot.send_message(chat_id=message.chat.id,
                                   text=f'''–°–µ–≥–æ–¥–Ω—è –Ω–æ—á—å—é —É–º–µ—Ä(–ª–∞) {killed_player[0].full_name}
–ú–∞—Ñ–∏–π –±–æ–ª—å—à–µ –Ω–µ—Ç, –í—ã –ø–æ–±–µ–¥–∏–ª–∏! 
–ü–æ–∑–¥—Ä–∞–≤–ª—è—é –º–∏—Ä–Ω—ã—Ö –∂–∏—Ç–µ–ª–µ–π —Å –ø–æ–±–µ–¥–æ–π!
–ù–∞–ø–∏—à–∏—Ç–µ end game''')
            flag = 6
        elif counter_of_mafia != 0 and counter_of_alive <= 2 * counter_of_mafia:
            await bot.send_message(chat_id=message.chat.id,
                                   text=f'''–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ñ–∞–∫–µ—Ä—ã –ø–æ–±–µ–¥–∏–ª–∏:(. 
–£–¥–∞—á–∏ –º–∏—Ä–Ω—ã–º –≤ —Å–ª–µ–¥—É—é—â–µ–π –∏–≥—Ä–µ. 
–ù–∞–∂–º–∏—Ç–µ end game''')
            flag = 6
    #else:
     #   flag = 6
    #    await bot.send_message(chat_id=message.chat.id,
   #                            text=f'''–°–µ–≥–æ–¥–Ω—è –Ω–æ—á—å—é —É–º–µ—Ä(–ª–∞) {killed_player[0].full_name}
#–ú–∞—Ñ–∏–π –±–æ–ª—å—à–µ –Ω–µ—Ç, –í—ã –ø–æ–±–µ–¥–∏–ª–∏!
#–ü–æ–∑–¥—Ä–∞–≤–ª—è—é –º–∏—Ä–Ω—ã—Ö –∂–∏—Ç–µ–ª–µ–π —Å –ø–æ–±–µ–¥–æ–π!
#–ù–∞–ø–∏—à–∏—Ç–µ end game''')
    if len(killed_players) >= 1:
        for i in range(len(killed_players)):
            killed_players.remove(killed_players[0])
    if len(healed_player) >= 1:
        for j in range(len(healed_player)):
            healed_player.remove(healed_player[0])
    if len(killed_player) >= 1:
        for t in range(len(killed_player)):
            killed_player.remove(killed_player[0])


@dp.message_handler(Text(equals='Vote'))
async def vote(message: types.Message):
    global flag
    if flag == 3:
        Vote_kb = InlineKeyboardMarkup()
        vote_buttons = list()
        for i in range(len(players)):
            vote_buttons.append(InlineKeyboardButton(text=f'{players[i].full_name}',
                                                     callback_data=f'Vote {players[i].full_name}'))
        Vote_kb.add(*vote_buttons)
        await message.answer(text='''–í—ã–±–µ—Ä–∏ —Ñ–∞–∫–µ—Ä–∞
–ß–µ—Ä–µ–∑ 2 –º–∏–Ω—É—Ç—ã –∑–∞–∫—Ä–æ–π—Ç–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –Ω–∞–ø–∏—Å–∞–≤ –≤ —á–∞—Ç end vote''',
                             reply_markup=Vote_kb)
        flag += 1
    else:
        await message.answer(text='–°–µ–π—á–∞—Å –Ω–µ–ª—å–∑—è –Ω–∞—á–∏–Ω–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ')





@dp.message_handler(Text(equals='end vote'))
async def vote_results(message: types.Message):
    global counter_of_mafia, counter_of_alive
    global first_mafia, second_mafia, third_mafia
    global flag
    global votes
    if flag == 4:
        max_votes = list()
        for player in players:
            max_votes.append(votes.count(player))
        counter = max_votes.count(max(max_votes))
        if counter != 1:
            await message.answer(text='''–í—ã –Ω–∏–∫–æ–≥–æ –Ω–µ –≤—ã–≥–Ω–∞–ª–∏, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Å–ª–µ–¥—É—é—â—É—é –Ω–æ—á—å,
–Ω–∞–ø–∏—à–∏—Ç–µ next night''')
            flag = 5
        else:
            for i in range(len(max_votes)):
                if max_votes[i] == max(max_votes):
                    if players[i] != first_mafia and players[i] != second_mafia and players[i] != third_mafia and counter_of_alive > 2 * counter_of_mafia + 1:
                        await message.answer(text=f'''–í—ã –≤—ã–≥–Ω–∞–ª–∏ –∏–≥—Ä–æ–∫–∞ {players[i].full_name},
—á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Å–ª–µ–¥—É—é—â—É—é –Ω–æ—á—å, –Ω–∞–ø–∏—à–∏—Ç–µ next night''')
                        flag = 5
                        counter_of_alive -= 1
                        players.remove(players[i])
                    elif players[i] != first_mafia and players[i] != second_mafia and players[i] != third_mafia and counter_of_alive <= 2 * counter_of_mafia + 1:
                        await message.answer(text=f'''–í—ã –≤—ã–≥–Ω–∞–ª–∏ –∏–≥—Ä–æ–∫–∞ {players[i].full_name},
–Ω–æ –æ–Ω –Ω–µ –±—ã–ª –º–∞—Ñ–∏–µ–π:(
–ú–∞—Ñ–∏–∏ –ø–æ–±–µ–¥–∏–ª–∏, —É–¥–∞—á–∏ –º–∏—Ä–Ω—ã–º –≤ —Å–ª–µ–¥—É—é—â–µ–π –∏–≥—Ä–µ
–ù–∞–ø–∏—à–∏—Ç–µ end game''')
                        flag = 6
                        counter_of_alive -= 1
                        players.remove(players[i])
                    elif (players[i] == first_mafia or players[i] == second_mafia or players[i] == third_mafia) and counter_of_mafia >= 2:
                        await message.answer(text=f'''–í—ã –≤—ã–≥–Ω–∞–ª–∏ –∏–≥—Ä–æ–∫–∞ {players[i].full_name},
—á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Å–ª–µ–¥—É—é—â—É—é –Ω–æ—á—å, –Ω–∞–ø–∏—à–∏—Ç–µ next night''')
                        flag = 5
                        counter_of_alive -= 1
                        counter_of_mafia -= 1
                        players.remove(players[i])
                    else:
                        await bot.send_message(chat_id=message.chat.id,
                                               text=f'''–í—ã –≤—ã–≥–Ω–∞–ª–∏ –∏–≥—Ä–æ–∫–∞ {players[i].full_name}
–ú–∞—Ñ–∏–π –±–æ–ª—å—à–µ –Ω–µ—Ç, –í—ã –ø–æ–±–µ–¥–∏–ª–∏! 
–ü–æ–∑–¥—Ä–∞–≤–ª—è—é –º–∏—Ä–Ω—ã—Ö –∂–∏—Ç–µ–ª–µ–π —Å –ø–æ–±–µ–¥–æ–π!
–ù–∞–ø–∏—à–∏—Ç–µ end game''')
                        flag = 6
        for i in range(len(votes)):
            votes.remove(votes[0])
    else:
        await message.answer(text='–°–µ–π—á–∞—Å –Ω–µ–ª—å–∑—è –∑–∞–∫–æ–Ω—á–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ')


@dp.message_handler(Text(equals='next night'))
async def next_night(message: types.Message):
    global flag
    global killer_flag_first, killer_flag_second, killer_flag_third
    global chop_flag, healer_flag
    global first_mafia, second_mafia, third_mafia
    global chop, healer
    if flag == 5:
        if len(players) >= 1:
            await bot.send_message(chat_id=message.chat.id,
                                   text=night_text)
            buttons = list()
            flag = 2
            killer_flag_first, killer_flag_second, killer_flag_third = 0, 0, 0
            healer_flag, chop_flag = 0, 0
            for j in range(len(players)):
                player = players[j]
                if player == first_mafia or player == second_mafia or player == third_mafia:
                    await bot.send_message(chat_id=player.id,
                                           text='''–í—ã–±–µ—Ä–∏ –∂–µ—Ä—Ç–≤—É
–î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É Kill''')
                elif player == chop:
                    await bot.send_message(chat_id=player.id,
                                           text=f'–í—ã–±–µ—Ä–∏ –∫–æ–≥–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å\n–î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É check')
                elif player == healer:
                    await bot.send_message(chat_id=player.id,
                                           text=f'–í—ã–±–µ—Ä–∏ –∫–æ–≥–æ –≤—ã–ª–µ—á–∏—Ç—å\n–î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É heal')
                else:
                    await bot.send_message(chat_id=player.id,
                                           text=f'–ñ–¥–∏ —É—Ç—Ä–∞')
        else:
            await bot.send_message(chat_id=message.chat.id,
                                   text='–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã')
    else:
        await bot.send_message(chat_id=message.chat.id,
                               text='–ï—â—ë —Ä–∞–Ω–æ')


@dp.message_handler(Text(equals='end game'))
async def end_game(message: types.Message):
    global first_mafia, second_mafia, third_mafia
    global chop, healer, checked
    global players, votes, killed_player, killed_players, healed_player
    global counter_of_mafia, counter_of_alive
    global flag, chop_flag, healer_flag
    global killer_flag_first, killer_flag_second, killer_flag_third
    counter_of_alive = 0
    counter_of_mafia = 0
    flag = 0
    chop_flag = 0
    healer_flag = 0
    killer_flag_first, killer_flag_second, killer_flag_third = 0, 0, 0
    first_mafia = None
    second_mafia = None
    third_mafia = None
    chop = None
    healer = None
    await bot.send_message(chat_id=message.chat.id,
                           text='–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Å–ª–µ–¥—É—é—â—É—é –∏–≥—Ä—É –Ω–∞–ø–∏—à–∏—Ç–µ Play')
    if len(checked) > 0:
        for o in range(len(checked)):
            checked.remove(checked[0])
    if len(players) > 0:
        for i in range(len(players)):
            players.remove(players[0])
    if len(votes) > 0:
        for j in range(len(votes)):
            votes.remove(votes[0])
    if len(killed_player) > 0:
        for k in range(len(killed_player)):
            killed_player.remove(killed_player[0])
    if len(killed_players) > 0:
        for t in range(len(killed_players)):
            killed_players.remove(killed_players[0])
    if len(healed_player) > 0:
        for r in range(len(healed_player)):
            healed_player.remove(healed_player[0])



@dp.callback_query_handler()
async def Kill_Heal_Vote(callback: types.CallbackQuery):
    global checked, first_mafia, second_mafia, third_mafia
    global chop, healer
    global players, killed_player, killed_players, healed_player
    for player in players:
        if callback.data == f'Kill {player.full_name}' and (callback.from_user == first_mafia or callback.from_user == second_mafia or callback.from_user == third_mafia):
            killed_players.append(player)
            await callback.answer(text='–ú–æ–ª–æ–¥–µ—Ü, —É–¥–∞—á–∏ –≤ –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –æ—Ç—á–∏—Å–ª–µ–Ω–∏—è—Ö')
            await bot.edit_message_reply_markup(chat_id=callback.from_user.id,
                                                message_id=callback.message.message_id,
                                                reply_markup=None)
            print(killed_players)
        elif callback.data == f'Heal {player.full_name}' and callback.from_user == healer:
            healed_player.append(player)
            await callback.answer('–ú–æ–ª–æ–¥–µ—Ü, –Ω–∞–¥–µ–µ–º—Å—è, —á—Ç–æ —Ç—ã —Å–ø–∞—Å —Å—Ç—É–¥–µ–Ω—Ç–∞ –æ—Ç –æ—Ç—á–∏—Å–ª–µ–Ω–∏—è')
            await bot.edit_message_reply_markup(chat_id=callback.from_user.id,
                                                message_id=callback.message.message_id,
                                                reply_markup=None)
        elif callback.data == f'Check {player.full_name}' and callback.from_user == chop:
            if player == first_mafia or player == second_mafia or player == third_mafia:
                await callback.answer(text=f'''{player.full_name} - –ú–∞—Ñ–∏—è, –º–æ–ª–æ–¥–µ—Ü, —Ç—ã –ø–æ–ø–∞–ª''')
            else:
                await callback.answer(text=f'''–£–≤—ã
{player.full_name} - –Ω–µ –º–∞—Ñ–∏—è, —É–¥–∞—á–∏ –≤ –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –ø–æ–∏—Å–∫–∞—Ö''')
            await bot.edit_message_reply_markup(chat_id=callback.from_user.id,
                                                message_id=callback.message.message_id,
                                                reply_markup=None)
        elif callback.data == f'Vote {player.full_name}':
            if callback.from_user in players:
                votes.append(player)
                await bot.send_message(chat_id=callback.message.chat.id,
                                       text=f'''{callback.from_user.full_name} –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª –≤
{player.full_name}''')
            else:
                await callback.answer('–¢—ã –≤—ã–±—ã–ª, –≥–æ–ª–æ—Å–æ–≤–∞—Ç—å –Ω–µ–ª—å–∑—è')
    if len(killed_players) == 3:
        if killed_players[0] == killed_players[1]:
            killed_player.append(killed_players[0])
        elif killed_players[1] == killed_players[2]:
            killed_player.append(killed_players[1])
        elif killed_players[0] == killed_players[2]:
            killed_player.append(killed_players[1])
        else:
            killed_player.append(random.choice(killed_players))
    elif len(killed_players) == 2:
        killed_player.append(random.choice(killed_players))
    elif len(killed_players) == 1:
        killed_player.append(killed_players[0])
    print(killed_players)
    print(killed_player)


async def on_startup(dp):
    print('–ë–æ—Ç –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!')


if __name__ == '__main__':
    executor.start_polling(dp, on_startup=on_startup)
